// <auto-generated />
using System;
using ForestEquipTrack.Infrastructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForestEquipTrack.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240911101851_UpdateEnumStates")]
    partial class UpdateEnumStates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.Equipment", b =>
                {
                    b.Property<Guid>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EquipmentModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EquipmentId");

                    b.HasIndex("EquipmentModelId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.EquipmentModel", b =>
                {
                    b.Property<Guid>("EquipmentModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EquipmentModelId");

                    b.ToTable("EquipmentModel");
                });

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.EquipmentModelStateHourlyEarnings", b =>
                {
                    b.Property<Guid>("EquipmentModelStateHourlyEarningsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EquipmentModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EquipmentModelStateHourlyEarningsId");

                    b.HasIndex("EquipmentModelId");

                    b.ToTable("EquipmentModelStateHourlyEarnings");
                });

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.EquipmentPositionHistory", b =>
                {
                    b.Property<Guid>("EquipmentPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Lon")
                        .HasColumnType("float");

                    b.HasKey("EquipmentPositionId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("EquipmentPositionHistory");
                });

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.EquipmentStateHistory", b =>
                {
                    b.Property<Guid>("EquipmentStateHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EquipmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("EquipmentStateHistoryId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("EquipmentStateHistory");
                });

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.Equipment", b =>
                {
                    b.HasOne("ForestEquipTrack.Domain.Entities.EquipmentModel", "EquipmentModel")
                        .WithMany("Equipment")
                        .HasForeignKey("EquipmentModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("EquipmentModel");
                });

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.EquipmentModelStateHourlyEarnings", b =>
                {
                    b.HasOne("ForestEquipTrack.Domain.Entities.EquipmentModel", "EquipmentModel")
                        .WithMany("EquipmentModelStateHourlyEarnings")
                        .HasForeignKey("EquipmentModelId");

                    b.Navigation("EquipmentModel");
                });

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.EquipmentPositionHistory", b =>
                {
                    b.HasOne("ForestEquipTrack.Domain.Entities.Equipment", "Equipment")
                        .WithMany("EquipmentPositionHistories")
                        .HasForeignKey("EquipmentId");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.EquipmentStateHistory", b =>
                {
                    b.HasOne("ForestEquipTrack.Domain.Entities.Equipment", "Equipment")
                        .WithMany("EquipmentStateHistories")
                        .HasForeignKey("EquipmentId");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.Equipment", b =>
                {
                    b.Navigation("EquipmentPositionHistories");

                    b.Navigation("EquipmentStateHistories");
                });

            modelBuilder.Entity("ForestEquipTrack.Domain.Entities.EquipmentModel", b =>
                {
                    b.Navigation("Equipment");

                    b.Navigation("EquipmentModelStateHourlyEarnings");
                });
#pragma warning restore 612, 618
        }
    }
}
